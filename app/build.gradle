plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'androidx.navigation.safeargs.kotlin'
    id 'dagger.hilt.android.plugin'
    id 'org.jlleitschuh.gradle.ktlint'
    id "io.gitlab.arturbosch.detekt"
    id "com.google.gms.google-services"
    id "com.google.firebase.crashlytics"
}

apply from: '../CICD/cicd.gradle'

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    defaultConfig {
        applicationId "com.andryoga.safebox"
        minSdkVersion 23
        targetSdkVersion 30
        versionCode 4
        // majorVersion.minorVersion.dbVersion.fixVersion
        versionName "1.3.3.0"

        //room.incremental: Enables Gradle incremental annotation processor
        //room.expandProjection: Configures Room to rewrite queries such that their top star projection is expanded to only contain the columns defined in the DAO method return type.
        javaCompileOptions {
            annotationProcessorOptions {
                arguments += [
                        "room.incremental"     : "true",
                        "room.expandProjection": "true",
                        "room.schemaLocation"  : "$projectDir/schemas".toString()
                ]
            }
        }

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        release {
            // Load releaseKeyStore.properties in an object
            // if you want to make release build in your local then make a releaseKeyStore.properties file with below keys at root level
            // also store your release key store (*.jks) file and mention path in STORE_FILE property
            // both these files are meant to be stored only locally and not committed to VCS
            def localReleaseKeyStoreProperties = new Properties()
            localReleaseKeyStoreProperties.load(new FileInputStream(rootProject.file("releaseKeyStore.properties")))
            storeFile file(localReleaseKeyStoreProperties['STORE_FILE'])
            storePassword localReleaseKeyStoreProperties['STORE_PASSWORD']
            keyPassword localReleaseKeyStoreProperties['KEY_PASSWORD']
            keyAlias localReleaseKeyStoreProperties['KEY_ALIAS']
        }
    }

    android.applicationVariants.all { variant ->
        variant.outputs.all {
            // if you are changing apk name then also change name in git workflow file
            outputFileName = "SafeBox-${variant.name}.apk"
        }
    }

    buildTypes {
        debug {
            applicationIdSuffix ".debug"
            debuggable true
            minifyEnabled false
        }
        qa {
            applicationIdSuffix ".qa"
            minifyEnabled true
            shrinkResources true
            debuggable false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
            firebaseCrashlytics {
                mappingFileUploadEnabled true
            }
        }
        release {
            minifyEnabled true
            shrinkResources true
            debuggable false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
            firebaseCrashlytics {
                mappingFileUploadEnabled true
            }
        }
    }
    kotlinOptions {
        useIR = true
    }
    buildFeatures {
        viewBinding true
        dataBinding true
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion compose_version
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }

    lintOptions {
        disable 'UnusedResources', 'FragmentTagUsage'
        disable 'Correctness', 'Messages'
    }
}

dependencies {

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.5.0'
    implementation 'androidx.appcompat:appcompat:1.3.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'

    // common
    implementation 'com.google.android.material:material:1.3.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation 'androidx.appcompat:appcompat:1.3.0'
    implementation "androidx.fragment:fragment-ktx:1.3.4"
    implementation "androidx.security:security-crypto:1.1.0-alpha03"

    // coroutines
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-play-services:1.5.1'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.5.1'

    //lifecycle
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_extension_version"
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle_extension_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_extension_version"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_livedata_extension_version"
    implementation "androidx.lifecycle:lifecycle-common:$lifecycle_extension_version"

    //navigation
    implementation "androidx.navigation:navigation-fragment-ktx:$navigationVersion"
    implementation "androidx.navigation:navigation-ui-ktx:$navigationVersion"

    //timber
    implementation "com.jakewharton.timber:timber:$timber_version"

    //hilt
    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-android-compiler:$hilt_version"

    //room
    implementation "androidx.room:room-runtime:$room_version"
    implementation "androidx.room:room-ktx:$room_version"
    kapt "androidx.room:room-compiler:$room_version"

    //compose
    implementation "androidx.compose.ui:ui:$compose_version"
    implementation "androidx.compose.material:material:$compose_version"
    implementation "androidx.compose.ui:ui-tooling-preview:$compose_version"
    implementation "androidx.compose.runtime:runtime-livedata:$compose_version"
    implementation 'androidx.activity:activity-compose:1.3.0'
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_version"
    debugImplementation "androidx.compose.ui:ui-tooling:$compose_version"

    // only enable next dependency to copy icon to MaterialIconsCopy file at
    // src/main/java/com/andryoga/safebox/ui/common/icons/MaterialIconsCopy.kt
    // don't enable this as app size increases drastically for debug builds
//    implementation "androidx.compose.material:material-icons-extended:$compose_version"

    //crashlytics
    implementation platform('com.google.firebase:firebase-bom:28.4.1')
    implementation 'com.google.firebase:firebase-crashlytics-ktx'
    implementation 'com.google.firebase:firebase-analytics-ktx'

    //biometric
    implementation "androidx.biometric:biometric:$biometric_version"
}